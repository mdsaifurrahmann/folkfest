name: Deploy Application
on:
  push:
    branches:
      - main
jobs:
  create-deployment-environment:
    name: Create Deployment Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Compile Assets
        run: |
          npm install
          npm run build
      - name: Create Deployment archive
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz \
          --exclude=*.git --exclude=node_modules * \
          -C $GITHUB_WORKSPACE \
          public \
          --include='*.html' --include='*.js' --include='*.css' --include='*.json' --include='*.ico' --include='*.png' --include='*.svg' --include='*.xml' --include='*.webmanifest' --include='*.txt' --include='*.webp' --include='*.jpg' --include='*.jpeg' --include='*.gif' --include='*.mp4' --include='*.webm' --include='*.ogv' --include='*.ogg' --include='*.mp3'
      - name: Store archive for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ${{github.sha}}.tar.gz
  prepare-release-on-server:
    name: Prepare release on server
    runs-on: ubuntu-latest
    needs: create-deployment-environment
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-build
      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ SECRETS.SERVER_HOST }}
          port: ${{ SECRETS.SERVER_PORT }}
          username: ${{ SECRETS.SERVER_USERNAME }}
          password: ${{ SECRETS.SERVER_PASSWORD }}
          source: ${{github.sha}}.tar.gz
          target: domains/scarboroughfolkfest.com/public_html/
      - name: Extract archive and create directory
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ SECRETS.SERVER_HOST }}
          port: ${{ SECRETS.SERVER_PORT }}
          username: ${{ SECRETS.SERVER_USERNAME }}
          password: ${{ SECRETS.SERVER_PASSWORD }}
          envs: GITHUB_SHA
          script: >
            tar xzf domains/scarboroughfolkfest.com/public_html/${GITHUB_SHA}.tar.gz
            -C "domains/scarboroughfolkfest.com/public_html/"
  active-release:
    name: Codebumble Server 1 - Active Release
    runs-on: ubuntu-latest
    needs:
      - create-deployment-environment
      - prepare-release-on-server
    steps:
      - name: Active Release
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{github.sha}}
          BASE_PATH: public_html/
        with:
          host: ${{ SECRETS.SERVER_HOST }}
          port: ${{ SECRETS.SERVER_PORT }}
          username: ${{ SECRETS.SERVER_USERNAME }}
          password: ${{ SECRETS.SERVER_PASSWORD }}
          envs: GITHUB_SHA,BASE_PATH
          script: |
            echo ${GITHUB_SHA}
            printf "%s" "${GITHUB_SHA}" > "${BASE_PATH}/${GITHUB_SHA}.txt"
  clean-up:
    name: Cleaning Up Artifacts
    runs-on: ubuntu-latest
    needs:
      - create-deployment-environment
      - prepare-release-on-server
      - active-release
    steps:
      - name: Clean up server junk
        uses: appleboy/ssh-action@master
        with:
          host: ${{ SECRETS.SERVER_HOST }}
          port: ${{ SECRETS.SERVER_PORT }}
          username: ${{ SECRETS.SERVER_USERNAME }}
          password: ${{ SECRETS.SERVER_PASSWORD }}
          script: >
            rm -rf domains/scarboroughfolkfest.com/public_html/${{github.sha}}.tar.gz
